import React from 'react';
import { Input, Checkbox,DatePicker,InputNumber } from 'antd';
import { connect } from 'dva'

import {View,DropdownSelect} from 'components';

import modelDefinition from '../model';
//取得模型名称
const modelName = modelDefinition.namespace;

//Layout组件
const Layout = ( props ) => {
  const {
    dispatch
  } = props;

  //定义操作条属性
  const actionBarProps = {
    new: true, //显示新增按钮
    delete: true, //显示删除按钮
  }

  //定义列表属性
  const listProps = {
    columns:[ // 和antd table组件的列定义相同
      { title: '序号', width: '50px',dataIndex: 'sortNo', key: 'sortNo', fulltext:false,sorter: true},
      { title: '名称', width: '200px',dataIndex: 'name', key: 'name', link:'edit'},
      { title: '责任部门', width: '100px', dataIndex: 'deptName', key: 'deptName', link:'edit',fulltext:false},
      { title: '值类型', width: '50px',dataIndex: 'valueType', key: 'valueType',
        textRender:valueTypeTextRender, fulltext:false,
      },
      { title: '编码', width: '80px', dataIndex: 'no', key: 'no',
      },
      { title: '截止日', width: '80px',dataIndex: 'deadline', key: 'deadline',fulltext:false
      },
      { title: '可延迟天数', width: '80px',dataIndex: 'delay', key: 'delay', fulltext:false,
      },
    ],
    defaultExpandAllRows: true,
  };

  //翻页器参数
  const paginationBarProps = { pagination: true };

  return (
    <View key={modelName+'ViewLayout'} {...props}
      modelName={modelName} //模型名称
      actionBar={actionBarProps} //操作条定义
      paginationBar={paginationBarProps} //翻页器定义
      list={listProps} //列表定义
    />
  )

  //值类型的显示构造函数
  function valueTypeTextRender(text,record) {
    if(text==1){
      return '数字';
    }
    if(text==2){
      return '文本';
    }
  }

  //类型的显示值构造函数
  function typeTextRender(text,record) {
    if(text==1){
      return '经济指标';
    }
    else if(text==2){
      return '信息月报';
    }
  }
}

//连接模型(model)和组件，使模型变化时，组件属性也跟着变化，从而重新加载组件
export default connect(({indicator_category, loading, apptabs:{tabs}}) =>
  ({indicator_category, loading: loading.models[modelName], tabs})
)(Layout);
