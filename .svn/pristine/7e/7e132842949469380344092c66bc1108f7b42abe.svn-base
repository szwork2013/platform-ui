import React from 'react';
import { connect } from 'dva'

import {View} from 'components';

import modelDefinition from '../model';

//取得模型名称
const modelName = modelDefinition.namespace;

//Layout组件
const Layout = ( props ) => {
  const {
    dispatch
  } = props;
  //定义操作条属性
  const actionBarProps = {
    new: true, //显示新增按钮
    delete: true, //显示删除按钮
  }

  //定义列表属性
  const listProps = {
    columns:[ // 和antd table组件的列定义相同
      { title: '名称', width: 100,dataIndex: 'text', key: 'text', link: 'edit', sorter: true },
      { title: '排序号', width: 100, dataIndex: 'sortNo', key: 'sortNo', sorter: true },
      { title: '失效年度', width: 100, dataIndex: 'endYear', key: 'endYear', sorter: true },
    ],
    rowSelection: {}, //选择功能配置
    defaultExpandAllRows: true,
  };

  //翻页器参数
  const paginationBarProps = { pagination: false };

  return (
    <View key={modelName+'ViewLayout'} {...props}
      type='Tree' //视图类型
      modelName={modelName} //模型名称
      actionBar={actionBarProps} //操作条定义
      paginationBar={paginationBarProps} //翻页器定义
      list={listProps} //列表定义
    />
  )
}

//连接模型(model)和组件，使模型变化时，组件属性也跟着变化，从而重新加载组件
export default connect(({expenditure_categories, loading, apptabs:{tabs}}) =>
  ({expenditure_categories, loading: loading.models[modelName], tabs})
)(Layout);
