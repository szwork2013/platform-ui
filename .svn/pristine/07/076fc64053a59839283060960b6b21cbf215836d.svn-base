import React from 'react';

import { Input, Checkbox, Select, InputNumber } from 'antd';
import { View, DropdownSelect } from 'components';
import service from 'service';
import modelDefinition from '../model';
const Option = Select.Option;
//取得模型名称
const modelName = modelDefinition.namespace;

const ViewComponent = (props) => {

  //定义操作条属性
  const actionBarProps = {
    new: false, //显示新增按钮
    delete: true, //显示删除按钮
  }
  let searchParam = { //搜索条件
    filter: { //过滤规则
      clazz: 'Material', //模型对应的后台实体类
      where: '1=1', //条件
    },
    size: 20, //指定每页记录数
    sort: 'o.id,desc' //缺省排序规则
  }
  const supplierSelect = supplierSelectProps();
  //定义列表属性
  const listProps = {
    columns: [ // 和antd table组件的列定义相同
      { title: '年度', width: 60, dataIndex: 'year', key: 'year', sorter: true, editor: <Input /> },
      { title: '物资名称', width: 100, dataIndex: 'name', key: 'name', sorter: true, editor: <Input /> },
      {
        type: 'select', title: '供应商', width: 200, dataIndex: 'supplier', key: 'supplier', sorter: true, editor: <DropdownSelect {...supplierSelect} />,
        textRender: (value, record) => {
          if (record.supplierId) {
            let href = service.constructRecordUrl({ modelName: 'material_supplier', id: record.supplierId });
            record.supplier = href ? href : '';

          }
          return record.supplierName;
        }
      },
      { title: '规格型号', dataIndex: 'specification', key: 'specification', sorter: true, editor: <Input /> },
      { title: '单位',width: 65, dataIndex: 'measurementUnit', key: 'measurementUnit', sorter: true, editor: <Input /> },
      { title: '单价(含税)',width: 100, dataIndex: 'priceWithTax', key: 'priceWithTax', sorter: true, editor: <Input /> },
      { title: '产品编码', width: 100,dataIndex: 'code', key: 'code', sorter: true, editor: <Input /> },
      { title: '适用设备',width: 200, dataIndex: 'applyDevice', key: 'applyDevice', sorter: true, editor: <Input /> }
    ],
    rowSelection: {},
  };

  //翻页器属性
  const paginationBarProps = {};

  return (
    <View key={modelName + 'ViewLayout'} {...props}
      editMode='row' //编辑模式：单行编辑
      modelName={modelName} //模型名称
      searchParam={searchParam}
      actionBar={actionBarProps} //操作条定义
      list={listProps} //列表定义
      paginationBar={paginationBarProps}
      uid='materialimport'
    />
  )
}
//构造数据项树的属性
function supplierSelectProps() {
  const props = props;
  const supplierProps = {
    type: 'list',
    labelKey: 'name',
    modelName: 'material_supplier',
    searchParam: {
      filter: {
        where: '1=1'
      },
      sort: ['o.id,asc'],
    },
  };
  return supplierProps;
}
//连接模型(model)和组件，使模型变化时，组件属性也跟着变化，从而重新加载组件
import { connect } from 'dva';
export default connect(({ material, loading }) =>
  ({ material, loading: loading.models[modelName] })
)(ViewComponent);
