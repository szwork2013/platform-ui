import { DatePicker } from 'antd'
import moment from 'moment';

import {StyledFormItem} from '../styled'

const dateFormat = 'YYYY-MM-DD';
const dateTimeFormat = 'YYYY-MM-DD HH:mm:ss';

const FormItemDatePicker = (props) => {
  //解构参数
  const {
    getFieldDecorator,
    title, //字段标题
    itemKey, //字段名
    rules, //校验规则
    width = ['48%', '20%', '77%'], //[整体宽度，lable宽度，内容宽度]，支持px和百分比
    initialValue, //初始值
    showTime,//设置显示时间
    required = true, //是否必须填写
    canEdit = true,  //是否可编辑
    controlProps = {}, //控件属性
    placeholder, //占位说明
    ...rest
  } = props;

  //构造校验规则
  let ruleArr = required ? [
      {
        required: required,
        message: title + '不能为空'
      }
    ] : [];
  if (rules)
    ruleArr.concat(rules);

  const defaultValue=initialValue!=undefined ? initialValue : undefined;
  let disabled=!canEdit;

  //显示UI
  const hasFeedback = props.hasFeedback!=undefined ? props.hasFeedback : required;
  const datePickerProps={
    showTime,
    format:showTime ? dateTimeFormat : dateFormat,
    disabled:disabled,
    placeholder: placeholder || '请选择'+title,
    ...controlProps
  }
  return (
    <StyledFormItem hasFeedback={hasFeedback} label={title} width={width} {...rest}>
      {getFieldDecorator(itemKey, {
        initialValue: defaultValue&&defaultValue!=''&&defaultValue!=null?moment(defaultValue, showTime ? dateTimeFormat : dateFormat):undefined,
        rules: ruleArr
      })(<DatePicker {...datePickerProps}/>)}
    </StyledFormItem>
  );
}

import PropTypes from 'prop-types';
FormItemDatePicker.propTypes = {
  getFieldDecorator: PropTypes.func.isRequired,
  setFieldsValue: PropTypes.func.isRequired,
  title: PropTypes.string,
  itemKey: PropTypes.string.isRequired,
  initialValue: PropTypes.string,
  rules: PropTypes.array,
  width: PropTypes.array,
  required: PropTypes.bool,
  showTime: PropTypes.bool,
  canEdit: PropTypes.bool,
  controlProps: PropTypes.object,
  placeholder: PropTypes.string,
}

export default FormItemDatePicker;
