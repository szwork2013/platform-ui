import React from 'react';
import { connect } from 'dva'
import { Input } from 'antd';

import {
  View, Attachment,
} from 'components';

import modelDefinition from '../model';

//取得模型名称
const modelName = modelDefinition.namespace;

//Layout组件
const Layout = ( props ) => {
  const {
    dispatch
  } = props;
  //定义操作条属性
  const actionBarProps = {
    new: false, //显示新增按钮
    delete: true, //显示删除按钮
  }

  //定义列表属性
  const listProps = {
    columns:[ // 和antd table组件的列定义相同
      { title: '名称', width: 300,dataIndex: 'name', key: 'name', link: 'edit', editor:<Input /> },
      { title: '文号', width: 300, dataIndex: 'referenceNo', key: 'referenceNo', editor:<Input />},
      {title: '附件', type:'attachment', dataIndex: '_files', key: '_files',
        editor:<Attachment showDetail={false}/>}
    ],
    rowSelection: {}, //选择功能配置
    defaultExpandAllRows: true,
  };

  //翻页器参数
  const paginationBarProps = { pagination: true };

  return (
    <View key={modelName+'ViewLayout'} {...props}
          editMode='row' //编辑模式：单行编辑
          modelName={modelName} //模型名称
          actionBar={actionBarProps} //操作条定义
          paginationBar={paginationBarProps} //翻页器定义
          list={listProps} //列表定义
    />
  )
}

//连接模型(model)和组件，使模型变化时，组件属性也跟着变化，从而重新加载组件
export default connect(({expenditure_redheaddoc, loading, apptabs:{tabs}}) =>
  ({expenditure_redheaddoc, loading: loading.models[modelName], tabs})
)(Layout);
