import service from 'service';

export default {
  namespace : 'executionScreenParams',
  state : {
    conditionData: {
      state: ['2', '3']
    }, //条件数据
  },

  reducers : {
    save(state, {payload}) {
      return {
        ...state,
        ...payload
      }
    }
  },

  subscriptions : {
    setup({dispatch}) {}
  },

  effects : {
    //初始化模型消息
    *initialize({
      payload
    }, {select, call, put}) {
      let searchParam = {
        filter: undefined,
        search: 'getTaskList',
        size: 10, //指定每页记录数
        //排序规则：sortNo升序
        alias: 'f',
        sort: 'f.dept asc'
      };
      yield put({
        type: 'task/query',
        payload: {
          searchParam,
          initQuery: true
        }
      })
    },

    //修改条件数据消息
    *changeConditionData({type,payload}, {select, call, put}) {
      const namespace = service.getNamespace(type);
      let conditionData = yield select((state) => state[namespace].conditionData);
      conditionData = {
        ...conditionData,
        ...payload
      };
      yield put({type: 'save', payload: {
          conditionData
        }});
      yield put({
        type: 'executionScreen/query',
        payload: {
          searchParam: {
            ...payload.projectName,
            ...payload.fundSourceId,
            ...payload.categoryId,
            ...payload.budget
          }
        }
      })
    }
  }
};