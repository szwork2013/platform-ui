import React from 'react';
import service from 'service';
import { Input, Checkbox, InputNumber } from 'antd';

import {
  View
} from 'components';

import modelDefinition from '../model';

//取得模型名称
const modelName = modelDefinition.namespace;

const ViewComponent = ( props ) => {
  const user = service.userInfo.user;
  //定义操作条属性
  const actionBarProps = {
    new: true, //显示新增按钮
    newPayloadRender: () => {return {processNo:user.orgFullName.indexOf('发电有限公司')!=-1?'carStationFlow':'carHQFlow'}},
    delete: true, //显示删除按钮
    newRow:false
  }

  //定义列表属性
  const listProps = {
    columns:[ // 和antd table组件的列定义相同
      { title: '乘车时间', width:155, fulltext:false, dataIndex: 'rideTime', key: 'rideTime', link: 'open', sorter: true },
      { title: '使用车辆', width:90, dataIndex: 'car.licensePlate', key: 'car.licensePlate', sorter: true ,
        link: 'open',
        textRender: (text, record)=>record.carLicensePlate,
      },
      { title: '驾驶员', width:85, dataIndex: 'driver.name', key: 'driver.name', sorter: true ,
        textRender: (text, record)=>record.driverName,
      },
      { title: '目的地', width:150,  dataIndex: 'destination', key: 'destination', link: 'open', sorter: true },
      { title: '用车事由', dataIndex: 'reason', key: 'reason', link: 'open'}
    ],
    rowSelection: service.authz('vehicle.admin') ? {} : undefined, //选择功能配置
    colDefaultLink: 'open',
  };

  //翻页器属性
  const paginationBarProps = {};


  //定义过滤条件
  const searchParam = {
    filter: { //过滤规则
      where: `(o.createdBy.userCode='${user.userCode}')`, //条件
    },
    size: 20, //指定每页记录数
    //排序规则：sortNo升序
    sort: 'o.rideTime,desc',
  };

  return (
    <View key={modelName+'ViewLayout'} {...props}
      searchParam={searchParam}
      editMode='row' //编辑模式：单行编辑
      modelName={modelName} //模型名称
      actionBar={actionBarProps} //操作条定义
      list={listProps} //列表定义
      paginationBar={paginationBarProps}
    />
  )
}

//连接模型(model)和组件，使模型变化时，组件属性也跟着变化，从而重新加载组件
import { connect } from 'dva';
export default connect(({car_used_records, loading}) =>
  ({car_used_records, loading: loading.models[modelName]})
)(ViewComponent);
