import React from 'react';
import { Collapse, Tabs, Icon, Badge, Button } from 'antd';
const Panel = Collapse.Panel;
const TabPane = Tabs.TabPane;

import { Form as FormLayout, FormItem } from 'components';
const FormContainer = FormLayout.FormContainer;
const Form = FormContainer.StyledForm;
const Row = FormContainer.StyledRow;

import service from 'service';
import wfservice from 'wfservice';


import PlanContent from '../../../common/PurchasePlanContent';
import PlanItems from '../../../common/PlanItems';
import Seal from '../../../common/Seal';
//权限定义表单
class PurchasePlanForm extends React.Component {

  constructor(props) {
    super(props);
    this.state = {
      activeKey: '1',
    }
  }

  componentDidMount() {
    //解构参数
    let {
      model, //FormContainer注入：模型
      href,
      dispatch,
    } = this.props;
    let { record, state } = model;
    if (state.mode == 'new') {
      dispatch({
        type: 'purchase_plan/initNo',
        payload: {
          href: href,
          record: record,
          thenClose: false,
        }
      })
    }
  }

  render() {
    //解构参数
    let {
    model, //FormContainer注入：模型
      canEdit = true, //FormContainer注入：是否可编辑
      getFieldDecorator,
      setFieldsValue,
      dispatch,
      formCanEdit,
      ...rest,
  } = this.props;
    let { record, state } = model;


    canEdit = canEdit ? formCanEdit : false;
    //构造FormItem的公共参数
    const itemProps = {
      canEdit, required: canEdit,
      getFieldDecorator, setFieldsValue,
    };
    const itemWidth = ['96%', '10%', '90%'];

    //处理现实部门的信息
    let org = service.getRecordLinkAttr(record, 'org');
    record.orgName = (org && org.orgName) || '';

    //处理需求的附件
    let demands=service.getRecordLinkAttr(record, 'demandPlans')||[];

    let planContentProp = { record, canEdit, getFieldDecorator, setFieldsValue, dispatch, type: record.type, orgLevel: record.orgLevel };
    let planItemsProp = { record, canEdit, dispatch, year: record.year, type: record.type, planType: 3, orgLevel: record.orgLevel }
    let planItemsPropDistribution = { record, canEdit: false, dispatch, year: record.year, type: record.type, planType: 4 }
    let activeKey = this.state.activeKey;
    if (record._isComment)
      activeKey = '2';
    //显示UI
    return (
      <Tabs tabPosition='top' activeKey={activeKey}
        onChange={(activeKey) => { this.setState({ activeKey }); record._isComment = false; }}>
        <TabPane tab={<span><Icon type="folder" />表单</span>} key="1">
          <Form layout='inline'>
            <div style={{ display: 'none' }}>
              <FormItem type='Input' {...itemProps}
                title='物资类型' itemKey='type' initialValue={record.type || 0}
              />
              <FormItem type='Input' {...itemProps} required={false}
                title='计划' itemKey='demandPlans' initialValue={record.demandPlans || []}
              />
              <FormItem type='Input' {...itemProps}
                title='机构类型' itemKey='orgLevel' initialValue={record.orgLevel}
              />
            </div>
            <PlanContent {...planContentProp}></PlanContent>
            {record.orgLevel != 1 && !(record.type == 4 || record.type == 'ENGINEERING_MATERIALS') &&
              <Tabs tabPosition='top'>
                <TabPane tab={<span><Icon type="solution" />采购订单</span>} key="4">
                  <PlanItems {...planItemsProp} key="CGQD" />
                </TabPane>
                <TabPane tab={<span><Icon type="solution" />物资发放</span>} key="5">
                  <PlanItems {...planItemsPropDistribution} key="WZFF" />
                </TabPane>
                {/*{!(record.type==1||record.type=='OFFICE_EQUIPMENT'||record.type == 'NON_INSTALLATION_EQUIPMENT' || record.type == 2||record.type == 'OFFICE_SUPPLIES' || record.type == 5||record.type == 'LABOUR_SUPPLIES' || record.type == 6)&&*/}
                {/*<TabPane tab={<span><Icon type="solution"/>物资发放</span>} key="5">*/}
                {/*<PlanItems {...planItemsPropDistribution} key="WZFF"/>*/}
                {/*</TabPane>*/}
                {/*}*/}
              </Tabs>
            }
            {(record.orgLevel == 1 || record.type == 4 || record.type == 'ENGINEERING_MATERIALS') &&
              <PlanItems {...planItemsProp} key="CGQD" />
            }
            <Seal record={record} />
          </Form>
        </TabPane>
        <TabPane key="2"
          tab={<span><Icon type="file-text" />批阅意见</span>}
        >
          <Form layout='inline'>
            <Row>
              <FormItem type='CommentView' {...itemProps} width={itemWidth}
                commentColumns={wfservice.getCommentColumns(record)}
              />
            </Row>
          </Form>
        </TabPane>
        <TabPane key="3"
          tab={<span><Icon type="star-o" />附件</span>}
        >
          <Form layout='inline'>
            <Row>
              <FormItem title='附件' type='Attachment' {...itemProps}
                itemKey='_files' link={service.getHrefOfLinkAttr(record)} mode={state.mode}
                multiple width={itemWidth}
              />
            </Row>
            {
              demands.map((demand)=>{
                let titleDemand=demand.year+'年'+demand.month+'月'+record.batchNo+'-需求附件';
                if(demand.type=='ENGINEERING_MATERIALS'||demand.type==4){
                  titleDemand=demand.year+'年'+demand.quarter+'季度'+record.batchNo+'-需求附件';
                }
                return (
                  <Row>
                    <FormItem title={titleDemand}
                              type='Attachment' {...itemProps} width={['96%', '25%', '75%']}
                              itemKey='_files' link={service.getHrefOfLinkAttr(demand)} mode={state.mode}
                              multiple
                    />
                  </Row>
                )
              })
            }
          </Form>
        </TabPane>
      </Tabs>
    );
  }
}
export default PurchasePlanForm;
